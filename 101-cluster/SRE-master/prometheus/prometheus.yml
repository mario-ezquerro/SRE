global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8000']
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  - job_name: "consul"
    metrics_path: "/v1/agent/metrics"
    static_configs:
      - targets: ["PONER-IP-MASER-ENS:8500"]

  - job_name: 'consul-services'
    consul_sd_configs:
      - server: 'http://PONER-IP-MASER-ENS:8500'  # IP o nombre del contenedor donde corre Consul
        services: []  # Si está vacío, descubre todos los servicios registrados en Consul
    relabel_configs:
      # Agregar el nombre del nodo de Consul (host) en la etiqueta "instance"
      - source_labels: [__meta_consul_node]
        target_label: instance

      # Renombrar cAdvisor con el nombre del nodo
      - source_labels: [__meta_consul_service, __meta_consul_node]
        regex: 'cadvisor;(.*)'
        target_label: job
        replacement: 'cadvisor-metrics-\1'

      # Renombrar Node Exporter con el nombre del nodo
      - source_labels: [__meta_consul_service, __meta_consul_node]
        regex: 'node-exporter;(.*)'
        target_label: job
        replacement: 'node-exporter-metrics-\1'
       
      # Filtrar solo los servicios que tengan la etiqueta "metric"
      - source_labels: [__meta_consul_tags]
        regex: .*metric.*
        action: keep


rule_files:
  - "alert.rules.yml"

